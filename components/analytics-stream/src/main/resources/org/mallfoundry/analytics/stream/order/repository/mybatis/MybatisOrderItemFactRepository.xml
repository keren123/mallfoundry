<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mallfoundry.analytics.stream.order.repository.mybatis.MybatisOrderItemFactRepository">

    <resultMap id="itemResultMap" type="org.mallfoundry.analytics.stream.models.OrderItemFact">
        <id property="id" column="id_"/>
        <result property="orderId" column="order_id_"/>
        <result property="statusId" column="status_id_"/>
        <result property="customerId" column="customer_id_"/>
        <result property="storeId" column="store_id_"/>
        <result property="productId" column="product_id_"/>
        <result property="variantId" column="variant_id_"/>
        <result property="createdDateId" column="created_date_id_"/>
        <result property="quantity" column="quantity_"/>
        <result property="price" column="price_"/>
        <result property="shippingCost" column="shipping_cost_"/>
        <result property="subtotalAmount" column="subtotal_amount_"/>
        <result property="totalAmount" column="total_amount_"/>
    </resultMap>

    <resultMap id="quantityFactResultMap" type="org.mallfoundry.analytics.stream.models.OrderQuantityFact">
        <id property="storeId" column="store_id_"/>
        <id property="customerId" column="customer_id_"/>
        <id property="productId" column="product_id_"/>
        <id property="variantId" column="variant_id_"/>
        <id property="dateId" column="date_id_"/>
        <result property="pendingQuantity" column="pending_quantity_"/>
        <result property="awaitingPaymentQuantity" column="awaiting_payment_quantity_"/>
        <result property="awaitingFulfillmentQuantity" column="awaiting_fulfillment_quantity_"/>
        <result property="awaitingShipmentQuantity" column="awaiting_shipment_quantity_"/>
        <result property="partiallyShippedQuantity" column="partially_shipped_quantity_"/>
        <result property="shippedQuantity" column="shipped_quantity_"/>
        <result property="awaitingPickupQuantity" column="awaiting_pickup_quantity_"/>
        <result property="partiallyRefundedQuantity" column="partially_refunded_quantity_"/>
        <result property="refundedQuantity" column="refunded_quantity_"/>
        <result property="disputedQuantity" column="disputed_quantity_"/>
        <result property="cancelledQuantity" column="cancelled_quantity_"/>
        <result property="completedQuantity" column="completed_quantity_"/>
        <result property="declinedQuantity" column="declined_quantity_"/>
    </resultMap>


    <sql id="columns">
        <trim suffixOverrides=",">
            id_,
            order_id_,
            status_id_,
            customer_id_,
            store_id_,
            product_id_,
            variant_id_,
            created_date_id_,
            quantity_,
            price_,
            shipping_cost_,
            subtotal_amount_,
            total_amount_,
        </trim>
    </sql>

    <sql id="insertValues">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{item.id},
            #{item.orderId},
            #{item.statusId},
            #{item.customerId},
            #{item.storeId},
            #{item.productId},
            #{item.variantId},
            #{item.createdDateId},
            #{item.quantity},
            #{item.price},
            #{item.shippingCost},
            #{item.subtotalAmount},
            #{item.totalAmount},
        </trim>
    </sql>

    <insert id="insertAll">
        insert into mf_dw_order_item_fact
        (<include refid="columns"/>)
        values
        <foreach collection="items" item="item" separator=",">
            <include refid="insertValues"/>
        </foreach>
    </insert>

    <select id="findAllById" resultMap="itemResultMap">
        select
        <include refid="columns"/>
        from mf_dw_order_item_fact
        where id_ in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <sql id="countAllWhere">
        where
        (
        <foreach collection="items" item="item" open="(" close=")" separator="or">
            store_id_ = #{item.storeId}
            and customer_id_ = #{item.customerId}
            and product_id_ = #{item.productId}
            and variant_id_ = #{item.variantId}
            and created_date_id_ = #{item.createdDateId}
        </foreach>
        )
    </sql>

    <select id="countAll" resultMap="quantityFactResultMap">
        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        date_id_,
        sum(pending_quantity_) as pending_quantity_,
        sum(awaiting_payment_quantity_) as awaiting_payment_quantity_,
        sum(awaiting_fulfillment_quantity_) as awaiting_fulfillment_quantity_,
        sum(awaiting_shipment_quantity_) as awaiting_shipment_quantity_,
        sum(partially_shipped_quantity_) as partially_shipped_quantity_,
        sum(shipped_quantity_) as shipped_quantity_,
        sum(awaiting_pickup_quantity_) as awaiting_pickup_quantity_,
        sum(partially_refunded_quantity_) as partially_refunded_quantity_,
        sum(refunded_quantity_) as refunded_quantity_,
        sum(disputed_quantity_) as disputed_quantity_,
        sum(cancelled_quantity_) as cancelled_quantity_,
        sum(completed_quantity_) as completed_quantity_,
        sum(declined_quantity_) as declined_quantity_
        from (
        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        count(id_) as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'pending'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        count(id_) as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'awaiting_payment'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        count(id_) as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'awaiting_fulfillment'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        count(id_) as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'awaiting_shipment'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        count(id_) as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'partially_shipped'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        count(id_) as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'shipped'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        count(id_) as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'awaiting_pickup'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        count(id_) as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'partially_refunded'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        count(id_) as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'refunded'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        count(id_) as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'disputed'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        count(id_) as cancelled_quantity_,
        0 as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'cancelled'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        count(id_) as completed_quantity_,
        0 as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'completed'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_

        union all

        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        created_date_id_ as date_id_,
        0 as pending_quantity_,
        0 as awaiting_payment_quantity_,
        0 as awaiting_fulfillment_quantity_,
        0 as awaiting_shipment_quantity_,
        0 as partially_shipped_quantity_,
        0 as shipped_quantity_,
        0 as awaiting_pickup_quantity_,
        0 as partially_refunded_quantity_,
        0 as refunded_quantity_,
        0 as disputed_quantity_,
        0 as cancelled_quantity_,
        0 as completed_quantity_,
        count(id_) as declined_quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        and status_id_ = 'declined'
        group by store_id_, customer_id_, product_id_, variant_id_, created_date_id_
        ) as order_quantity
        group by store_id_, customer_id_, product_id_, variant_id_, date_id_
    </select>
</mapper>