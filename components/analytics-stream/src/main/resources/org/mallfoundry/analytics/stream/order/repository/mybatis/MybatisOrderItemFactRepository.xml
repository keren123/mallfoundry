<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mallfoundry.analytics.stream.order.repository.mybatis.MybatisOrderItemFactRepository">

    <resultMap id="itemResultMap" type="org.mallfoundry.analytics.models.OrderItemFact">
        <id property="id" column="id_"/>
        <result property="orderId" column="order_id_"/>
        <result property="statusId" column="status_id_"/>
        <result property="customerId" column="customer_id_"/>
        <result property="storeId" column="store_id_"/>
        <result property="productId" column="product_id_"/>
        <result property="variantId" column="variant_id_"/>
        <result property="createdDateId" column="created_date_id_"/>
        <result property="quantity" column="quantity_"/>
        <result property="price" column="price_"/>
        <result property="shippingCost" column="shipping_cost_"/>
        <result property="subtotalAmount" column="subtotal_amount_"/>
        <result property="totalAmount" column="total_amount_"/>
    </resultMap>

    <resultMap id="quantityFactResultMap" type="org.mallfoundry.analytics.models.OrderQuantityFact">
        <id property="storeId" column="store_id_"/>
        <id property="customerId" column="customer_id_"/>
        <id property="productId" column="product_id_"/>
        <id property="variantId" column="variant_id_"/>
        <id property="statusId" column="status_id_"/>
        <result property="quantity" column="quantity_"/>
    </resultMap>


    <sql id="columns">
        <trim suffixOverrides=",">
            id_,
            order_id_,
            status_id_,
            customer_id_,
            store_id_,
            product_id_,
            variant_id_,
            created_date_id_,
            quantity_,
            price_,
            shipping_cost_,
            subtotal_amount_,
            total_amount_,
        </trim>
    </sql>

    <sql id="insertValues">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{item.id},
            #{item.orderId},
            #{item.statusId},
            #{item.customerId},
            #{item.storeId},
            #{item.productId},
            #{item.variantId},
            #{item.createdDateId},
            #{item.quantity},
            #{item.price},
            #{item.shippingCost},
            #{item.subtotalAmount},
            #{item.totalAmount},
        </trim>
    </sql>

    <insert id="insert">
        insert into mf_dw_order_item_fact
        (<include refid="columns"/>)
        values
        <include refid="insertValues"/>
    </insert>

    <sql id="updateValues">
        <trim suffixOverrides=",">
            order_id_ = #{item.orderId},
            status_id_ = #{item.statusId},
            customer_id_ = #{item.customerId},
            store_id_ = #{item.storeId},
            product_id_ = #{item.productId},
            variant_id_ = #{item.variantId},
            created_date_id_ = #{item.createdDateId},
            quantity_ = #{item.quantity},
            price_ = #{item.price},
            shipping_cost_ = #{item.shippingCost},
            subtotal_amount_ = #{item.subtotalAmount},
            total_amount_ = #{item.totalAmount},
        </trim>
    </sql>

    <update id="update">
        update mf_dw_order_item_fact
        <set>
            <include refid="updateValues"/>
        </set>
        where id_ = #{item.id}
    </update>

    <select id="findAllById" resultMap="itemResultMap">
        select
        <include refid="columns"/>
        from mf_dw_order_item_fact
        where id_ in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <sql id="countAllWhere">
        where
        (
        <foreach collection="items" item="item" open="(" close=")" separator="or">
            store_id_ = #{item.storeId}
            and customer_id_ = #{item.customerId}
            and product_id_ = #{item.productId}
            and variant_id_ = #{item.variantId}
        </foreach>
        )
    </sql>

    <select id="countAll" resultMap="quantityFactResultMap">
        select store_id_,
        customer_id_,
        product_id_,
        variant_id_,
        status_id_,
        count(quantity_) as quantity_
        from mf_dw_order_item_fact
        <include refid="countAllWhere"/>
        group by store_id_, customer_id_, product_id_, variant_id_, status_id_
    </select>
</mapper>